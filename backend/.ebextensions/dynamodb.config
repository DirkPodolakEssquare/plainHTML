Resources:
  ConversationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "receiver"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "receiver-index"
          KeySchema:
            - AttributeName: "receiver"
              KeyType: "HASH"
          ProvisionedThroughput: {ReadCapacityUnits: 2, WriteCapacityUnits: 2}
          Projection: { ProjectionType: INCLUDE, NonKeyAttributes: [ "sender" ] }
      ProvisionedThroughput: {ReadCapacityUnits: 2, WriteCapacityUnits: 2}
  AllowDynamoDBAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Id: ConversationTableAccessPolicy
        Statement:
        - Action: [ "dynamodb:BatchWriteItem", "dynamodb:PutItem", "dynamodb:DeleteItem", "dynamodb:GetItem", "dynamodb:Scan", "dynamodb:Query", "dynamodb:UpdateItem" ]
          Effect: Allow
          Resource:
            - Fn::GetAtt: [ConversationTable, Arn]
            - { "Fn::Join" : [ "", [ { "Fn::GetAtt" :["ConversationTable", "Arn" ] }, "/index/receiver-index" ] ] }
          Sid: AllowDynamoAccess
        Version: "2012-10-17"
      Roles: [ aws-elasticbeanstalk-ec2-role ]
  MessageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "conversation"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "conversation-index"
          KeySchema:
            - AttributeName: "conversation"
              KeyType: "HASH"
          ProvisionedThroughput: {ReadCapacityUnits: 2, WriteCapacityUnits: 2}
          Projection: { ProjectionType: INCLUDE, NonKeyAttributes: [ "content", "created" ] }
      ProvisionedThroughput: {ReadCapacityUnits: 2, WriteCapacityUnits: 2}
  AllowDynamoDBAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Id: MessageTableAccessPolicy
        Statement:
        - Action: [ "dynamodb:BatchWriteItem", "dynamodb:PutItem", "dynamodb:DeleteItem", "dynamodb:GetItem", "dynamodb:Scan", "dynamodb:Query", "dynamodb:UpdateItem" ]
          Effect: Allow
          Resource:
            - Fn::GetAtt: [MessageTable, Arn]
            - { "Fn::Join" : [ "", [ { "Fn::GetAtt" :["MessageTable", "Arn" ] }, "/index/conversation-index" ] ] }
          Sid: AllowDynamoAccess
        Version: "2012-10-17"
      Roles: [ aws-elasticbeanstalk-ec2-role ]